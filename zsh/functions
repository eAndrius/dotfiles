# Syntax-highlight JSON strings or files
function json() {
	if [ -p /dev/stdin ]; then
		# piping, e.g. `echo '{"foo":42}' | json`
		python -mjson.tool | pygmentize -l javascript
	else
		# e.g. `json '{"foo":42}'`
		python -mjson.tool <<< "$*" | pygmentize -l javascript
	fi
}

# Extract archives - use: extract <file>
# Credits to http://dotfiles.org/~pseup/.bashrc
function extract() {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2) tar xjf $1 ;;
			*.tar.gz) tar xzf $1 ;;
			*.bz2) bunzip2 $1 ;;
			*.rar) rar x $1 ;;
			*.gz) gunzip $1 ;;
			*.tar) tar xf $1 ;;
			*.tbz2) tar xjf $1 ;;
			*.tgz) tar xzf $1 ;;
			*.zip) unzip $1 ;;
			*.Z) uncompress $1 ;;
			*.7z) 7z x $1 ;;
			*) echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

function new-tmux-from-dir-name {
  tmux new-session -As `basename $PWD`
}

# Create a new directory and enter it
function md() {
    mkdir -p "$@" && cd "$@"
}

# create sha 256 fingerprint of a cert/key file
function shaprint() {
    openssl x509 -in "$1" -noout -fingerprint -sha256 | cut -f2 -d= | sed s/://g | awk '{ print tolower }'
}

function slack() {
    channel=$1;
    message=$2;
    http_status=$(curl -X POST https://slack.com/api/chat.postMessage -d token=$SLACK_TOKEN -d as_user=true -d channel="$channel" -d text="$message" -o /dev/null -s -w "${http_code}");

    (test "$http_status" -lt 400) && echo "sent message to $channel ðŸ˜Ž" || echo "failed to send message to $channel ðŸ˜ž";
}

function pywork() {
    env=$1
    if [ "$env" -eq "" ]; then env="env"; fi
    source "$env/bin/activate"
    PATH="$VIRTUAL_ENV/bin:$PATH"
}

function converge() {
    if [[ $1 == "-h" ]]; then
        echo "converge [method] path [other curl options]";
        return 0
    fi

    HTTP_METHOD=${(U)1};
    API_AUTH="Authorization: $CONVERGE_AUTH";
    HTTP_MIME="Content-Type: application/json";
    if [[ $HTTP_METHOD == "GET" || $HTTP_METHOD == "PUT" || $HTTP_METHOD == "POST" || $HTTP_METHOD == "DELETE" ]]; then
        CONVERGE_PATH="$2";
        shift;
    else
        HTTP_METHOD="GET"
        CONVERGE_PATH=$1
    fi
    shift;
    curl -X $HTTP_METHOD -H "$API_AUTH" -H "$HTTP_MIME" "https://api.converge.io/$CONVERGE_PATH" $@
}
